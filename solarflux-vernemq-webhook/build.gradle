plugins {
    id 'checkstyle'
    id 'java'
    id 'eclipse'
	id 'org.springframework.boot' version '2.7.1'
}

apply plugin: 'checkstyle'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

dependencyManagement {
	imports {
		mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
	}
}

repositories {
    mavenCentral()
	maven {
		url "https://dev.solarnetwork.net/archive/repository/solarnetwork-stage/"
	}
}

ext {
	checkstyleVersion = '8.40'
}

configurations {
	all*.exclude group: 'org.apache.commons', module: 'commons-compress'
	all*.exclude group: 'org.eclipse.virgo.mirrored'
	all*.exclude group: 'org.osgi'
	all*.exclude group: 'org.osgi.core'
	all*.exclude group: 'org.osgi.enterprise'
	all*.exclude group: 'org.springframework', module: 'spring-messaging'
	all*.exclude group: 'org.springframework', module: 'spring-websocket'
	all*.exclude group: 'org.springframework.security'
	all*.exclude group: 'javax.servlet', module: 'com.springsource.javax.servlet'
	all*.exclude group: 'javax.servlet', module: 'com.springsource.javax.servlet'
	all*.exclude group: 'net.sf.supercsv'
}

checkstyle {
	toolVersion = "${checkstyleVersion}"
	configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter"
	implementation "org.springframework.boot:spring-boot-starter-cache"
	implementation "org.springframework.boot:spring-boot-starter-jdbc"
	implementation "org.springframework.boot:spring-boot-starter-web"

	// DB
	runtimeOnly 'org.postgresql:postgresql'
		
	// JCache
	implementation 'javax.cache:cache-api'
	implementation 'org.ehcache:ehcache'

	// JSON
	implementation "com.fasterxml.jackson.core:jackson-annotations"
	implementation "com.fasterxml.jackson.core:jackson-core"
	implementation "com.fasterxml.jackson.core:jackson-databind"
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-joda"

	// SolarNetwork
	implementation 'net.solarnetwork.common:net.solarnetwork.common.web:1.15.0'
	implementation 'net.solarnetwork.central:net.solarnetwork.central.common.security:1.15.0'

	// Utils
    implementation 'com.github.veqryn:cidr-ip-trie:1.0.1'
    
    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testImplementation 'com.spotify:hamcrest-jackson:1.1.3'
    testImplementation 'com.spotify:hamcrest-pojo:1.1.3'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.named('test') {
    useJUnitPlatform()
}

eclipse {
	project {
		natures 'net.sf.eclipsecs.core.CheckstyleNature'
		buildCommand 'net.sf.eclipsecs.core.CheckstyleBuilder'
	}
}

jar {
    baseName = 'solarflux-vernemq-webhook'
    version =  version
    manifest {
        attributes 'Implementation-Title': 'SolarFlux VerneMQ Webhook Server',
                   'Implementation-Version': version
    }
}
